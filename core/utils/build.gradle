plugins {
    alias(libs.plugins.com.android.library)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.blaze.core.utils'
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        vectorDrawables {
            useSupportLibrary true
        }

        //map properties
        Properties properties = new Properties()
        if (rootProject.file("local.properties").exists()) {
            properties.load(
                    rootProject
                            .file("local.properties")
                            .newDataInputStream()
            )
        }

        //to insert the variable in manifests file
        manifestPlaceholders = [googleMapsApiKey: "${properties.getProperty('MAPS_API_KEY')}"]

        buildConfigField("String", "MAPS_API_KEY", properties.getProperty("MAPS_API_KEY"))
        buildConfigField("String", "PREFERENCES_NAME", properties.getProperty("PREFERENCES_NAME"))


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("boolean","IS_RELEASE","true")
            buildConfigField("String","BASE_URL","\"https://evcharging-v1.onrender.com/\"")
        }
        debug{
            minifyEnabled false
            buildConfigField("boolean","IS_RELEASE","false")
            buildConfigField("String","BASE_URL","\"https://evcharging-v1.onrender.com/\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion ProjectConfig.compilerExtensionVersion
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.lifecycle.runtime.ktx
    implementation libs.core.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity.compose
    implementation platform(libs.compose.bom)
    implementation libs.ui
    implementation libs.ui.graphics
    implementation libs.ui.tooling.preview
    implementation libs.material3
    implementation libs.play.services.location
    implementation libs.maps.play.service
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core

    // Dagger Hilt
    implementation libs.hilt.android
    androidTestImplementation platform(libs.compose.bom)
    androidTestImplementation libs.ui.test.junit4
    debugImplementation libs.ui.tooling
    debugImplementation libs.ui.test.manifest
    kapt libs.hilt.compiler

    implementation(platform("com.google.firebase:firebase-bom:32.2.2"))

    implementation "com.google.firebase:firebase-auth-ktx"

    //okhttp
    implementation libs.okkhttp
    implementation libs.logging.interceptor

    implementation libs.lazier


    implementation libs.okkhttp
    implementation libs.retrofit2.kotlin.coroutines.adapter
    implementation libs.retrofit
    implementation libs.gson
    implementation libs.converter.gson
    implementation libs.converter.moshi
    implementation libs.converter.scalars

    //ktor
    implementation libs.ktor.client.core
    implementation libs.ktor.client.android
    implementation libs.ktor.client.okhttp
    implementation libs.ktor.client.content.negotiation
    implementation libs.ktor.client.logging.jvm
    implementation libs.ktor.client.cio
    implementation libs.ktor.serialization.kotlinx.json

    //data preferences
    implementation libs.datastore.preferences

}